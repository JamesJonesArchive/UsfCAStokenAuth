/**
 * USF Service for CAS backed Token Authentication
 * @version v0.0.1-2j - 2014-07-16 * @link https://github.com/jamjon3/UsfCAStokenAuth
 * @author James Jones <jamjon3@gmail.com>
 * @license Lesser GPL License, http://www.gnu.org/licenses/lgpl.html
 */!function(a,b,c){"use strict";c.module("UsfCAStokenAuth",["angularLocalStorage"]).factory("tokenAuth",["$rootScope","$injector","storage","$window","$q","$log","$cookieStore","$cookies","$resource","$http","UsfCAStokenAuthConstant",function(a,b,d,e,f,g,h,i,j,k,l){var m={initializeStorage:function(){var b={};b[l.applicationUniqueId]={buffer:[],applicationResources:{}},d.bind(a,"tokenAuth",{defaultValue:b}),c.forEach(l.applicationResources,function(b,c){c in a.tokenAuth[l.applicationUniqueId].applicationResources||(a.tokenAuth[l.applicationUniqueId].applicationResources[c]={url:b})})},getApplicationResourceKey:function(a){var b=!0,d="";return c.forEach(l.applicationResources,function(c,e){b&&a===c&&(d=e,b=!1)}),d},getStoredToken:function(b){return"token"in a.tokenAuth[l.applicationUniqueId].applicationResources[b]?a.tokenAuth[l.applicationUniqueId].applicationResources[b].token:null},getResourceUrl:function(a){return l.applicationResources[a]},requestToken:function(b){return j(a.tokenAuth[l.applicationUniqueId].applicationResources[b].tokenService+"/request",{},{getToken:{method:"POST",withCredentials:!0,responseType:"text",headers:{"Content-Type":"application/json"},transformResponse:function(a,b){var c=b();return g.info(c),g.info({transformedResponse:a}),{token:a}}}}).getToken({service:a.tokenAuth[l.applicationUniqueId].applicationResources[b].appId}).$promise}};return a.$on("event:auth-loginRequired",function(){g.info(a.tokenAuth[l.applicationUniqueId].buffer.slice(-1)[0].config.data),e.alert("Temporary Stop before the redirect to the tokenService!"),e.location.assign(a.tokenAuth[l.applicationUniqueId].buffer.slice(-1)[0].config.data.tokenService)}),a.$on("event:auth-tokenRequired",function(){m.requestToken().then(function(b){a[a.tokenAuth[l.applicationUniqueId].buffer.slice(-1)[0].config.params.service].token=b.token},function(a){g.info(a)})}),m}]).config(["$httpProvider","$resourceProvider","$injector",function(a,b){"defaults"in b&&(b.defaults.stripTrailingSlashes=!1),a.defaults.useXDomain=!0,a.defaults.withCredentials=!0,delete a.defaults.headers.common["X-Requested-With"],a.interceptors.push(["$rootScope","$q","$window","$log","UsfCAStokenAuthConstant",function(a,b,d,e,f){var g=function(a){var b=!0,d="";return c.forEach(f.applicationResources,function(c,e){b&&a===c&&(d=e,b=!1)}),d};return{request:function(a){return a||b.when(a)},requestError:function(a){return e.info(a),b.reject(a)},response:function(a){return a||b.when(a)},responseError:function(d){e.info(d);var h=b.defer();if(401!==d.status||d.config.ignoreAuthModule)return e.info({Rejection:d}),h.promise;d.config.data=d.data,a.tokenAuth[f.applicationUniqueId].buffer.push({config:d.config,deferred:h});var i={getParams:function(a){var b,c,d,e,f={};for(b=a.split("&"),d=0,e=b.length;e>d;d++)c=b[d].split("="),f[c[0]]=decodeURIComponent(c[1]);return f}}.getParams(d.data.tokenService.substring(d.data.tokenService.indexOf("?")+1)),j=g(d.config.url);return c.forEach({appId:i.service,tokenService:{removeLogin:function(a){var b=a.lastIndexOf("/");return b>a.indexOf("/")+1?a.substr(0,b):a}}.removeLogin(d.data.tokenService.substring(0,d.data.tokenService.indexOf("?")))},function(b,c){a.tokenAuth[f.applicationUniqueId].applicationResources[j][c]=b}),a.$broadcast("event:auth-loginRequired"),h.promise}}}])}]).run(["$rootScope","$log","$window","storage","tokenAuth","UsfCAStokenAuthConstant",function(a,b,d,e,f,g){f.initializeStorage();var h={error:function(a){b.info(a)},tokenHandler:function(c){b.info({requestTokenData:c}),a.tokenAuth[g.applicationUniqueId].applicationResources[j].token=c.token}},i=[];c.forEach(a.tokenAuth[g.applicationUniqueId].buffer,function(a){var b=f.getApplicationResourceKey(a.config.url);-1==this.indexOf(b)&&this.push(b)},i),b.info({appKeys:i});for(var j in i)"appId"in a.tokenAuth[g.applicationUniqueId].applicationResources[j]&&"tokenService"in a.tokenAuth[g.applicationUniqueId].applicationResources[j]&&f.requestToken(j).then(h.tokenHandler,h.error);for(;a.tokenAuth[g.applicationUniqueId].buffer.length>0;)a.tokenAuth[g.applicationUniqueId].buffer.pop()}])}(jQuery,window,window.angular);