/**
 * USF Service for CAS backed Token Authentication
 * @version v0.0.1-2p - 2014-07-25 * @link https://github.com/jamjon3/UsfCAStokenAuth
 * @author James Jones <jamjon3@gmail.com>
 * @license Lesser GPL License, http://www.gnu.org/licenses/lgpl.html
 */!function($,window,angular){"use strict";angular.module("UsfCAStokenAuth",["ngRoute","angularLocalStorage"]).factory("tokenAuth",["$rootScope","$injector","storage","$window","$q","$log","$cookieStore","$cookies","$resource","$http","UsfCAStokenAuthConstant",function($rootScope,$injector,storage,$window,$q,$log,$cookieStore,$cookies,$resource,$http,UsfCAStokenAuthConstant){var service={initializeStorage:function(){var defaultValue={};defaultValue[UsfCAStokenAuthConstant.applicationUniqueId]={buffer:[],applicationResources:{}},storage.bind($rootScope,"tokenAuth",{defaultValue:defaultValue}),angular.forEach(UsfCAStokenAuthConstant.applicationResources,function(value,key){key in $rootScope.tokenAuth[UsfCAStokenAuthConstant.applicationUniqueId].applicationResources||($rootScope.tokenAuth[UsfCAStokenAuthConstant.applicationUniqueId].applicationResources[key]={url:value})})},getApplicationResourceKey:function(url){var keepGoing=!0,appkey="";return angular.forEach(UsfCAStokenAuthConstant.applicationResources,function(value,key){keepGoing&&url===value&&(appkey=key,keepGoing=!1)}),appkey},getStoredToken:function(appKey){return"token"in $rootScope.tokenAuth[UsfCAStokenAuthConstant.applicationUniqueId].applicationResources[appKey]?$rootScope.tokenAuth[UsfCAStokenAuthConstant.applicationUniqueId].applicationResources[appKey].token:null},getResourceUrl:function(appKey){return UsfCAStokenAuthConstant.applicationResources[appKey]},requestToken:function(appKey){return $resource($rootScope.tokenAuth[UsfCAStokenAuthConstant.applicationUniqueId].applicationResources[appKey].tokenService+"/request",{},{getToken:{method:"POST",withCredentials:!0,responseType:"text",headers:{"Content-Type":"application/json"},transformResponse:function(data,headersGetter){var headers=headersGetter();return $log.info(headers),$log.info({transformedResponse:data}),{token:data}}}}).getToken({service:$rootScope.tokenAuth[UsfCAStokenAuthConstant.applicationUniqueId].applicationResources[appKey].appId}).$promise}};return $rootScope.$on("event:auth-loginRequired",function(){$log.info($rootScope.tokenAuth[UsfCAStokenAuthConstant.applicationUniqueId].buffer.slice(-1)[0].config.data),$window.location.assign($rootScope.tokenAuth[UsfCAStokenAuthConstant.applicationUniqueId].buffer.slice(-1)[0].config.data.tokenService)}),$rootScope.$on("event:auth-unauthorizedRedirect",function(){$window.location.path(UsfCAStokenAuthConstant.unauthorizedRoute)}),service}]).config(["$httpProvider","$resourceProvider","$injector","UsfCAStokenAuthConstant",function($httpProvider,$resourceProvider){"defaults"in $resourceProvider&&($resourceProvider.defaults.stripTrailingSlashes=!1),$httpProvider.defaults.useXDomain=!0,$httpProvider.defaults.withCredentials=!0,delete $httpProvider.defaults.headers.common["X-Requested-With"],$httpProvider.interceptors.push(["$rootScope","$q","$window","$location","$log","UsfCAStokenAuthConstant",function($rootScope,$q,$window,$location,$log,UsfCAStokenAuthConstant){var getApplicationResourceKey=function(url){var keepGoing=!0,appkey="";return angular.forEach(UsfCAStokenAuthConstant.applicationResources,function(value,key){keepGoing&&url===value&&(appkey=key,keepGoing=!1)}),appkey};return{request:function(config){return config||$q.when(config)},requestError:function(rejection){return $log.info(rejection),$q.reject(rejection)},response:function(response){return response||$q.when(response)},responseError:function(rejection){$log.info(rejection);var deferred=$q.defer();if(401!==rejection.status||rejection.config.ignoreAuthModule)return $log.info({Rejection:rejection}),deferred.promise;if(rejection.config.data=rejection.data,"authorizedError"in rejection.data)$rootScope.authorizedError=rejection.data.authorizedError,$rootScope.unauthorizedRole=rejection.data.role,$rootScope.$broadcast("event:auth-unauthorizedRedirect");else{$rootScope.tokenAuth[UsfCAStokenAuthConstant.applicationUniqueId].buffer.push({config:rejection.config,deferred:deferred});var params={getParams:function(queryString){var queries,temp,i,l,params={};for(queries=queryString.split("&"),i=0,l=queries.length;l>i;i++)temp=queries[i].split("="),params[temp[0]]=decodeURIComponent(temp[1]);return params}}.getParams(rejection.data.tokenService.substring(rejection.data.tokenService.indexOf("?")+1)),appKey=getApplicationResourceKey(rejection.config.url);angular.forEach({appId:params.service,tokenService:{removeLogin:function(url){var lastSlashIndex=url.lastIndexOf("/");return lastSlashIndex>url.indexOf("/")+1?url.substr(0,lastSlashIndex):url}}.removeLogin(rejection.data.tokenService.substring(0,rejection.data.tokenService.indexOf("?")))},function(value,key){$rootScope.tokenAuth[UsfCAStokenAuthConstant.applicationUniqueId].applicationResources[appKey][key]=value}),$rootScope.$broadcast("event:auth-loginRequired")}return deferred.promise}}}])}]).run(["$rootScope","$log","$window","storage","tokenAuth","UsfCAStokenAuthConstant",function($rootScope,$log,$window,storage,tokenAuth,UsfCAStokenAuthConstant){tokenAuth.initializeStorage();for(var tokenProcessing={error:function(errorMessage){$log.info(errorMessage)},tokenHandler:function(data){$log.info({requestTokenData:data}),$rootScope.tokenAuth[UsfCAStokenAuthConstant.applicationUniqueId].applicationResources[appKey].token=data.token}},i=$rootScope.tokenAuth[UsfCAStokenAuthConstant.applicationUniqueId].buffer.length-1;i>=0;i--){var config=$rootScope.tokenAuth[UsfCAStokenAuthConstant.applicationUniqueId].buffer[i].config,appKey=tokenAuth.getApplicationResourceKey(config.url);"appId"in $rootScope.tokenAuth[UsfCAStokenAuthConstant.applicationUniqueId].applicationResources[appKey]&&"tokenService"in $rootScope.tokenAuth[UsfCAStokenAuthConstant.applicationUniqueId].applicationResources[appKey]&&tokenAuth.requestToken(appKey).then(tokenProcessing.tokenHandler,tokenProcessing.error)}for(;$rootScope.tokenAuth[UsfCAStokenAuthConstant.applicationUniqueId].buffer.length>0;)$rootScope.tokenAuth[UsfCAStokenAuthConstant.applicationUniqueId].buffer.pop()}])}(jQuery,window,window.angular);